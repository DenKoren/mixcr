---
kind: pipeline
type: docker
name: depoly

platform:
  os: linux
  arch: amd64

event:
  - push

steps:
  - name: restore_cache
    image: meltwater/drone-cache
    pull: true
    settings:
      restore: true
      # debug: true
      cache_key: 'deploy-{{ .Commit.Branch }}'
      access_key:
        from_secret: aws-key-id
      secret_key:
        from_secret: aws-secret-key
      bucket:
        from_secret: aws-cache-bucket
      region:
        from_secret: aws-region
      local_root: /drone/src
      mount:
        - .m2

  - name: deploy_maven
    image: maven:3-adoptopenjdk-8
    commands:
      - mvn --no-transfer-progress deploy -DskipTests -DaltDeploymentRepository=therepo::default::$${DEPLOY_REPO} -Drevision=${DRONE_COMMIT_SHA:0:7}
    environment:
      MAVEN_OPTS: "-Dmaven.repo.local=/drone/src/.m2"
      AWS_REGION:
        from_secret: aws-region
      AWS_ACCESS_KEY_ID:
        from_secret: aws-key-id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws-secret-key
      DEPLOY_REPO:
        from_secret: maven-deploy-repo-private
    when:
      event:
        exclude:
          - pull_request
    depends_on:
      - restore_cache

  - name: deploy_bin
    image: banst/awscli
    commands:
      - apk add --no-cache zip
      - ./pack.sh
      - touch empty
      - aws s3 cp target/mixcr.zip s3://$${DEPLOY_S3_CDN_BUCKET}/$${DEPLOY_S3_CDN_PREFIX}/software/mixcr/mixcr-${DRONE_COMMIT}.zip
      - >
        aws s3api put-object-tagging \
            --bucket $${DEPLOY_S3_CDN_BUCKET} \
            --key $${DEPLOY_S3_CDN_PREFIX}/software/mixcr/mixcr-${DRONE_COMMIT}.zip \
            --tagging '{"TagSet": [{"Key":"git_commit","Value":"${DRONE_COMMIT}"},{"Key":"git_branch","Value":"${DRONE_BRANCH}"},{"Key":"software","Value":"mixcr"}]}'
      - aws s3 cp --website-redirect 'https://cdn.milaboratory.com/software/mixcr/mixcr-${DRONE_COMMIT}.zip?response-content-disposition=attachment;filename=mixcr-b${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:7}.zip' empty "s3://$${DEPLOY_S3_LINK_BUCKET}/$${DEPLOY_S3_LINK_PREFIX}/mixcr/mixcr-b${DRONE_BUILD_NUMBER}-${DRONE_COMMIT_SHA:0:7}.zip"
    environment:
      AWS_REGION:
        from_secret: aws-region
      AWS_ACCESS_KEY_ID:
        from_secret: aws-key-id
      AWS_SECRET_ACCESS_KEY:
        from_secret: aws-secret-key
      DEPLOY_S3_CDN_BUCKET:
        from_secret: cdn-s3-bucket
      DEPLOY_S3_CDN_PREFIX:
        from_secret: cdn-s3-prefix
      DEPLOY_S3_LINK_BUCKET:
        from_secret: link-s3-bucket
      DEPLOY_S3_LINK_PREFIX:
        from_secret: link-s3-prefix
    when:
      event:
        exclude:
          - pull_request
    depends_on:
      - deploy_maven

  - name: Send Telegram Notification
    image: appleboy/drone-telegram
    depends_on:
      - deploy_bin
    settings:
      token:
        from_secret: telegram-token
      to:
        from_secret: telegram-chat-id-micore
      format: markdown
      message: >
        {{#success build.status}}
        ‚úÖ MiXCR deploy {{build.number}} success.


        üåê https://bin.milaboratory.com/mixcr/mixcr-b{{build.number}}-{{truncate commit.sha 7}}.zip


        POM:

        ```

        <groupId>com.milaboratory</groupId>

        <artifactId>mixcr</artifactId>

        <version>3.0.14-{{truncate commit.sha 7}}</version>
        ```
        {{else}}
        ‚ùå MiXCR deploy {{build.number}} failure.
        üåê {{build.link}}
        {{/success}}

  - name: rebuild_cache
    image: meltwater/drone-cache
    settings:
      rebuild: true
      # debug: true
      cache_key: 'deploy-{{ .Commit.Branch }}'
      access_key:
        from_secret: aws-key-id
      secret_key:
        from_secret: aws-secret-key
      bucket:
        from_secret: aws-cache-bucket
      region:
        from_secret: aws-region
      local_root: /drone/src
      mount:
        - .m2
    depends_on:
      - deploy_maven

---

kind: pipeline
type: docker
name: test

platform:
  os: linux
  arch: amd64

node:
  type: highcpu

event:
  - push

steps:
  - name: restore_cache
    image: meltwater/drone-cache
    pull: true
    settings:
      restore: true
      # debug: true
      cache_key: 'test-{{ .Commit.Branch }}'
      access_key:
        from_secret: aws-key-id
      secret_key:
        from_secret: aws-secret-key
      bucket:
        from_secret: aws-cache-bucket
      region:
        from_secret: aws-region
      local_root: /drone/src
      mount:
        - .m2
        - src/test/resources/big

  - name: build_and_test
    image: maven:3-adoptopenjdk-8
    commands:
      - ./ensure-test-data.sh
      - mvn --no-transfer-progress clean pre-integration-test
    environment:
      MAVEN_OPTS: "-Dmaven.repo.local=/drone/src/.m2"
    depends_on:
      - restore_cache

  - name: integration_tests
    image: adoptopenjdk:8-hotspot
    commands:
      - apt-get update
      - apt-get install -y jq
      - ./itests.sh test
    depends_on:
      - build_and_test

  - name: rebuild_cache
    image: meltwater/drone-cache
    pull: true
    settings:
      rebuild: true
      # debug: true
      cache_key: 'test-{{ .Commit.Branch }}'
      access_key:
        from_secret: aws-key-id
      secret_key:
        from_secret: aws-secret-key
      bucket:
        from_secret: aws-cache-bucket
      region:
        from_secret: aws-region
      local_root: /drone/src
      mount:
        - .m2
        - src/test/resources/big
    depends_on:
      - build_and_test

---
kind: signature
hmac: bfa31163b70e4c937822646f200c3645abf178ef5df60d8b727727f5e63f1e50

...
